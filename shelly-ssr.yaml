esphome:
  name: "shelly-ssr"
  platformio_options:
    board_build.f_cpu: 160000000L

<<: !include common/substitutions.yaml
packages: 
  wifi: !include common/wifi.yaml
  mqtt: !include common/mqtt.yaml
  management: !include common/management.yaml
  sun: !include common/sun.yaml

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_FREERTOS_UNICORE: y
      CONFIG_ESP32_DEFAULT_CPU_FREQ_160: y
      CONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ: "160"

globals:
   - id: sleeptime
     type: int
     restore_value: no
     initial_value: '0'

sun:
  on_sunrise:
    - elevation: 10Â°
      then:
        - switch.turn_off: relay_1

sensor:
  - platform: sun
    id: sun_elevation
    type: elevation

binary_sensor:
  - platform: gpio
    pin: GPIO4
    id: button_1

    on_multi_click:
    - timing:
        - ON for at most 1.5s
        - OFF for at least 0.25s
      then:
        - logger.log: "Single Short Clicked"
        - globals.set:
            id: sleeptime
            value: "120"
        - script.execute: delay_script
    - timing:
        - ON for at most 1s
        - OFF for at most 0.25s
        - ON for at most 1s
        - OFF for at least 0.25s
      then:
        - logger.log: "Double Short Clicked"
        - globals.set:
            id: sleeptime
            value: "300"
        - script.execute: delay_script
    - timing:
        - ON for at least 1.5s
      then:
        - logger.log: "Single Long Clicked"
        - switch.toggle: relay_1

switch:
# connected to hardware and not exposed
  - platform: gpio
    id: relay_1
    pin: GPIO26

# exposed as mqtt (so here we can stop the script on any message received)
  - platform: template
    name: "relay_1"
    lambda: return id(relay_1).state;
    turn_on_action:
      then:
        - script.stop: delay_script
        - switch.turn_on: relay_1
    turn_off_action:
      then:
        - script.stop: delay_script
        - switch.turn_off: relay_1

script:
  - id: delay_script
    mode: restart
    then:
    - switch.turn_on: relay_1
    - delay: !lambda return long(id(sleeptime)) * 1000;
    - switch.turn_off: relay_1
